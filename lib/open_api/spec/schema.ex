defmodule OpenAPI.Spec.Schema do
  @moduledoc false
  use OpenAPI.Spec.Helper

  alias OpenAPI.Spec

  @type t :: %__MODULE__{
          title: String.t(),
          multiple_of: pos_integer | nil,
          maximum: integer | nil,
          exclusive_maximum: boolean,
          minimum: integer | nil,
          exclusive_minimum: boolean,
          max_length: non_neg_integer | nil,
          min_length: non_neg_integer | nil,
          pattern: String.t() | nil,
          max_items: non_neg_integer | nil,
          min_items: non_neg_integer | nil,
          unique_items: boolean,
          max_properties: non_neg_integer | nil,
          min_properties: non_neg_integer | nil,
          required: [String.t()] | nil,
          enum: [any] | nil,
          type: String.t(),
          all_of: [t] | nil,
          one_of: [t] | nil,
          any_of: [t] | nil,
          not: t | nil,
          items: t | nil,
          properties: %{optional(String.t()) => t},
          additional_properties: boolean | t,
          description: String.t(),
          format: String.t(),
          default: any,
          nullable: boolean,
          discriminator: Spec.Schema.Discriminator.t(),
          read_only: boolean,
          write_only: boolean,
          xml: Spec.Schema.XML.t(),
          external_docs: Spec.ExternalDocumentation.t() | nil,
          example: any,
          deprecated: boolean
        }

  defstruct [
    :title,
    :multiple_of,
    :maximum,
    :exclusive_maximum,
    :minimum,
    :exclusive_minimum,
    :max_length,
    :min_length,
    :pattern,
    :max_items,
    :min_items,
    :unique_items,
    :max_properties,
    :min_properties,
    :required,
    :enum,
    :type,
    :all_of,
    :one_of,
    :any_of,
    :not,
    :items,
    :properties,
    :additional_properties,
    :description,
    :format,
    :default,
    :nullable,
    :discriminator,
    :read_only,
    :write_only,
    :xml,
    :external_docs,
    :example,
    :deprecated
  ]

  @decoders %{
    title: :string,
    multiple_of: :integer,
    maximum: :integer,
    exclusive_maximum: {:boolean, default: false},
    minimum: :integer,
    exclusive_minimum: {:boolean, default: false},
    max_length: :integer,
    min_length: :integer,
    pattern: :string,
    max_items: :integer,
    min_items: :integer,
    unique_items: {:boolean, default: false},
    max_properties: :integer,
    min_properties: :integer,
    required: [:string],
    enum: [:any],
    type: :string,
    all_of: [__MODULE__],
    one_of: [__MODULE__],
    any_of: [__MODULE__],
    not: __MODULE__,
    items: __MODULE__,
    properties: {%{:string => __MODULE__}, default: %{}},
    additional_properties: {[:boolean, __MODULE__], default: true},
    description: :string,
    format: :string,
    default: :any,
    nullable: {:boolean, default: false},
    discriminator: Spec.Schema.Discriminator,
    read_only: {:boolean, default: false},
    write_only: {:boolean, default: false},
    xml: Spec.Schema.XML,
    external_docs: Spec.ExternalDocumentation,
    example: :any,
    deprecated: {:boolean, default: false}
  }

  def matches?(_value), do: true
end
